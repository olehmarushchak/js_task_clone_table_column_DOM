{"mappings":"AAAA;AAEA,MAAM,QAAQ,SAAS,oBAAoB,CAAC;AAE5C,MAAM,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;IACzB,MAAM,WAAW,IAAI,gBAAgB,CAAC;IAEtC,MAAM,WAAW,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE;IAE9C,IAAI,IAAI,aAAa,CAAC,OAAO;QAC3B,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAE7C,cAAc,WAAW,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QAExD,IAAI,YAAY,CAAC,eAAe;QAEhC;IACF;IAEA,MAAM,UAAU,SAAS,aAAa,CAAC;IAEvC,QAAQ,WAAW,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;IAElD,IAAI,YAAY,CAAC,SAAS;AAC5B","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst allTr = document.getElementsByTagName('tr');\n\nArray.from(allTr).forEach((row) => {\n  const allCells = row.querySelectorAll('td, th');\n\n  const lastCell = allCells[allCells.length - 1];\n\n  if (row.querySelector('th')) {\n    const newCellHeader = document.createElement('th');\n\n    newCellHeader.textContent = `${allCells[1].textContent}`;\n\n    row.insertBefore(newCellHeader, lastCell);\n\n    return;\n  }\n\n  const newCell = document.createElement('td');\n\n  newCell.textContent = `${allCells[1].textContent}`;\n\n  row.insertBefore(newCell, lastCell);\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}